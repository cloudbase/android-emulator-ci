#!/bin/bash

function ENV() {
    local var=$1
    local default=$2

    # We'll avoid overriding existing values.
    export $var="${!var:-$default}"
}

ENV JOB_ID "test_$(date +"%Y%m%d_%H%M%S")"
ENV JOB_STATE_DIR "/tmp/emu_ci/$JOB_ID"
ENV JOB_STATE_RC "$JOB_STATE_DIR/job_state.rc"

# We'll use a file that contains various variables that define the
# config/state of the job. The CI jobs will update this file
# during their execution (e.g. storing VM IDs, etc).
# The variables used bellow will only get set if not included in the
# job state file or other environment variables.

if [[ -f $JOB_STATE_RC ]]; then
    source $JOB_STATE_RC
fi

ENV JOB_LOG_DIR "$JOB_STATE_DIR/logs"
ENV JOB_EMU_VM_LOG_DIR "$JOB_LOG_DIR/emu_vm"
ENV JOB_PACKAGES_DIR "$JOB_STATE_DIR/packages"
ENV FINISHED_JOBS_DIR "$JOB_STATE_DIR/finished_jobs"

# Openstack environment options
ENV VM_NET_NAME "dataplane"
ENV KEYPAIR_NAME "keyLuci"

ENV BUILDER_VM_FLAVOR "androidEmuBuilderSmall"
ENV EMU_VM_FLAVOR "win10emuSmall"

ENV BUILDER_VM_IMAGE "ubuntu1804-emu-builder"
ENV EMU_VM_IMAGE "win10-android-emulator"
ENV VM_AVAILABILITY_ZONE "3par"

ENV EMU_VM_NAME_TEMPLATE "win10-emu"
ENV BUILDER_VM_NAME_TEMPATE "ubuntu-emu-builder"

ENV EMU_VM_NAME "$EMU_VM_NAME_TEMPLATE-$JOB_ID"
ENV BUILDER_VM_NAME "$BUILDER_VM_NAME_TEMPATE-$JOB_ID"

ENV VM_SSL_CERT_PATH `realpath ~/.ssl/ssl_winrm.crt`
ENV VM_SSL_KEY_PATH `realpath ~/.ssl/ssl_winrm.key`
ENV VM_SSH_KEY `realpath ~/.ssh/id_rsa`
ENV LOG_SRV_KEY `realpath ~/.ssh/id_rsa`

ENV CI_GIT_REPO "https://github.com/petrutlucian94/android-emulator-ci"

ENV BUILDER_VM_USERNAME "ubuntu"
ENV EMU_VM_USERNAME "Admin"
ENV LOG_SRV_USERNAME "ubuntu"

ENV BUILDER_PACKAGES_DIR "/home/ubuntu/android/packages"
ENV BUILDER_LOG_DIR "/home/ubuntu/android/log"
ENV LOCAL_BUILDER_LOG_DIR "$JOB_LOG_DIR/builder"

ENV EMU_VM_SCRIPTS_DIR "c:\android-emulator-ci"

# It shouldn't take longer than 10 minutes, assuming that the
# repos are cached.
ENV CREATE_ENVIRONMENT_TIMEOUT $(( 25 * 60 ))
ENV JOB_POLL_INTERVAL 5

ENV LOG_SRV "10.100.0.9"
ENV LOG_SRV_DL_DIR "/srv/dl"
ENV LOG_SRV_REL_LOG_PATH "android-emulator-ci/logs"
# Global packages dir
ENV LOG_SRV_REL_PACKAGES_PATH "android-emulator-ci/packages"
ENV LOG_SRV_REL_JOB_PATH "$LOG_SRV_REL_LOG_PATH/$JOB_ID"
# Per job packages dir
ENV LOG_SRV_REL_JOB_PACKAGES_PATH "$LOG_SRV_REL_JOB_PATH/packages"
ENV LOG_SRV_REL_JOB_LOG_PATH "$LOG_SRV_REL_JOB_PATH/logs"

ENV LOG_SRV_LOG_DIR "$LOG_SRV_DL_DIR/$LOG_SRV_REL_LOG_PATH"
ENV LOG_SRV_PACKAGES_DIR "$LOG_SRV_DL_DIR/$LOG_SRV_REL_PACKAGES_PATH"
ENV LOG_SRV_JOB_DIR "$LOG_SRV_DL_DIR/$LOG_SRV_REL_JOB_PATH"
ENV LOG_SRV_JOB_PACKAGES_DIR "$LOG_SRV_DL_DIR/$LOG_SRV_REL_JOB_PACKAGES_PATH"
ENV LOG_SRV_JOB_LOG_DIR "$LOG_SRV_DL_DIR/$LOG_SRV_REL_JOB_LOG_PATH"

ENV LOG_SRV_PACKAGES_URL "http://$LOG_SRV/$LOG_SRV_REL_PACKAGES_PATH"
ENV LOG_SRV_JOB_PACKAGES_URL "http://$LOG_SRV/$LOG_SRV_REL_JOB_PACKAGES_PATH"

ENV UNITTESTS_ARCHIVE_NAME "emulator_unittests.tar.gz"
ENV EMULATOR_ARCHIVE_NAME "android_emulator.tar.bz2"
ENV ANDROID_SDK_PACKAGE_NAME "sdk-tools-windows-3859397.zip"

ENV ANDROID_SDK_URL "$LOG_SRV_PACKAGES_URL/$ANDROID_SDK_PACKAGE_NAME"
ENV EMULATOR_ARCHIVE_URL "$LOG_SRV_JOB_PACKAGES_URL/$EMULATOR_ARCHIVE_NAME"
ENV UNITTESTS_ARCHIVE_URL "$LOG_SRV_JOB_PACKAGES_URL/$UNITTESTS_ARCHIVE_NAME"

ENV EMU_VM_PACKAGES_DIR "C:\packages"
ENV EMU_VM_LOG_DIR "C:\android_logs"
ENV EMU_VM_TEST_RESULTS_DIR "C:\Android\test_results"
ENV EMU_VM_EMULATOR_ARCH_PATH "$EMU_VM_PACKAGES_DIR\\$EMULATOR_ARCHIVE_NAME"
ENV EMU_VM_UNITTESTS_ARCH_PATH "$EMU_VM_PACKAGES_DIR\\$UNITTESTS_ARCHIVE_NAME"
ENV EMU_VM_SDK_TOOLS_PATH "$EMU_VM_PACKAGES_DIR\\$ANDROID_SDK_PACKAGE_NAME"

ENV EMU_VM_LOG_SHARE "android_logs"
ENV EMU_VM_RESULTS_SHARE "test_results"

ENV EMU_VM_LOCAL_LOG_MOUNT "$JOB_EMU_VM_LOG_DIR/logs"
ENV EMU_VM_LOCAL_RESULTS_MOUNT "$JOB_EMU_VM_LOG_DIR/test_results"

# Should we expect the builder deps/aosp to be cached on the image?
ENV BUILDER_IMAGE_CACHE "1"

ENV EMU_VM_REACHABLE_TIMEOUT 180
